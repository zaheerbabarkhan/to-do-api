openapi: 3.0.3
info:
  title: To-Do OpenAPI 3.0
  description: This is the Open API document5ation for the tod-do app which will let the user to signup and then add the task to their todo task list, user can also delete the task or mark the task as completed.
  version: 1.0.0
  contact: 
    email: email123@gmail.com
servers:
  - url: http://localhost:3000
tags:
  - name: User
    description: This contain all the user related APIs like signup and login or social login
  - name: Health-check
    description: This contains the route to check the health of the API wether API isw up or down
paths:
  /status-check:
    get:
      tags:
        - Health-check
      summary: Get Server Information
      description: Returns information about the server
      operationId: healthCheck
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
  /user:
    post:
      tags:
        - User
      summary: Create user
      description: Takes in the user data and create the user on that data
      operationId: createUser
      requestBody:
        description: Create a new user in the app
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        '200':
          description: User will be created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CreateUser"
                  - type: object
                    properties:
                      id: 
                        type: integer
                        format: int64
                      statusId:
                        type: integer
                        format: int32
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BadRequestError"
  /user/confirm-email:
    put:
      tags:
        - User
      summary: Confirm user's email
      description: Confirms the user's email using a token
      operationId: confirmUserEmail
      parameters:
        - name: token
          in: query
          description: The confirmation token received by the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Email confirmation successful
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BadRequestError"
components:
  schemas:
    ServerInfo:
      type: object
      properties:
        uptimeInSeconds:
          type: integer
        message:
          type: string
        date:
          type: string
    CreateUser:
      required:
        - firstName
        - lastName
        - email
        - password
      type: object
      properties:
        firstName:
          type: string
          example: Jhon
          minLength: 1
          maxLength: 20
        lastName:
          type: string
          minLength: 1
          maxLength: 20
          example: Doe
        email: 
          type: string
          maxLength: 250
          example: user1@gmail.com
        password: 
          type: string
          minLength: 8
          maxLength: 15
          example: BEdZ4xbYwr6w0Fs
    BadRequestError:
      type: object
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
              message:
                type: string
              path:
                type: string 
  securitySchemes:
    JWTSecurity:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT        
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          